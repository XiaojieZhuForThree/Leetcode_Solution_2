#include <vector>
#include <unordered_map>
#include <algorithm>
using std::vector;

class Solution {
public:
    long long maximumImportance(int n, vector<vector<int>>& roads) {
        std::unordered_map<int, int> m;
        for (auto& r : roads) {
            m[r[0]]++;
            m[r[1]]++;
        }
        vector<int> v;
        for (int i = 0; i < n; i++) v.push_back(i);
        sort(v.begin(), v.end(), [&m](int a, int b) {
            return m[a] < m[b];
            });
        long long ans = 0;
        for (int i = 0; i < n; i++) ans += (long long)(i + 1) * m[v[i]];
        return ans;
    }
};
