#include <vector>

using std::vector;

class Solution {
public:
    vector<vector<int>> largestLocal(vector<vector<int>>& grid) {
        int n = size(grid);
        vector<vector<int>> ans(n - 2, vector<int>(n - 2));
        for (int i = 0; i < n - 2; i++) {
            for (int j = 0; j < n - 2; j++) {
                ans[i][j] = helper(grid, i, j);
            }
        }
        return ans;
    }

private:
    int helper(vector<vector<int>>& grid, int i, int j) {
        int ans = 0;
        for (int m = i; m < i + 3; m++) {
            for (int n = j; n < j + 3; n++) ans = std::max(ans, grid[m][n]);
        }
        return ans;
    }
};
