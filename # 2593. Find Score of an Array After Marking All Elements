#include <queue>
#include <vector>
#include <unordered_set>
using std::vector;

class Solution {
public:
    long long findScore(vector<int>& nums) {
        std::priority_queue<vector<int>> pq;
        for (int i = 0; i < size(nums); i++) pq.push({ -nums[i], -i });
        std::unordered_set<int> s;
        long long ans = 0;
        while (!pq.empty()) {
            auto cur = pq.top();
            pq.pop();
            cur[0] = -cur[0];
            cur[1] = -cur[1];
            if (s.count(cur[1])) continue;
            ans += cur[0];
            s.insert(cur[1]);
            if (cur[1] - 1 >= 0) s.insert(cur[1] - 1);
            if (cur[1] + 1 < size(nums)) s.insert(cur[1] + 1);
        }
        return ans;
    }
};
