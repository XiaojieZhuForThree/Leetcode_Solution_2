#include <vector>
#include <queue>
#include <algorithm>
using std::vector;

class Solution {
public:
    int maxTwoEvents(vector<vector<int>>& events) {
        sort(begin(events), end(events));
        auto comp = [](auto& a, auto& b) {
            return a[0] > b[0];
            };
        std::priority_queue<vector<int>, vector<vector<int>>, decltype(comp)> pq(comp);
        int ans = 0, add = 0;
        for (auto& e : events) {
            while (!pq.empty() && pq.top()[0] < e[0]) {
                auto cur = pq.top();
                pq.pop();
                add = std::max(add, cur[1]);
            }
            ans = std::max(ans, e[2] + add);
            pq.push({ e[1], e[2] });
        }
        return ans;
    }
};
