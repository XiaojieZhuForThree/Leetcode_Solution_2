#include <vector>
using std::vector;

class Solution {
public:
    int minimumMountainRemovals(vector<int>& nums) {
        int n = size(nums);
        vector<int> l(n, 0), r(n, 0);
        for (int i = 0; i < n; i++) {
            l[i] = i;
            for (int j = i - 1; j >= 0; j--) {
                if (nums[j] >= nums[i]) continue;
                l[i] = std::min(l[i], l[j] + i - j - 1);
            }
        }
        for (int i = n - 1; i >= 0; i--) {
            r[i] = n - i - 1;
            for (int j = i + 1; j < n; j++) {
                if (nums[j] >= nums[i]) continue;
                r[i] = std::min(r[i], r[j] + j - i - 1);
            }
        }
        int ans = n;
        for (int i = 0; i < n; i++) {
            if (l[i] == i || r[i] == n - i - 1) continue;
            ans = std::min(ans, l[i] + r[i]);
        }
        return ans;
    }
};
