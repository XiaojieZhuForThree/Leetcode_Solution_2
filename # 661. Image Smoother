#include <vector>
using std::vector;

class Solution {
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        int m = size(img), n = size(img[0]);
        vector<std::pair<int, int>> ds = { {-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 0}, {0, 1}, {1, -1}, {1, 0}, {1, 1} };
        vector<vector<int>> ans(m, vector<int>(n, 0));
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                ans[i][j] = getAns(img, ds, i, j);
            }
        }
        return ans;
    }
private:
    int getAns(vector<vector<int>>& img, vector<std::pair<int, int>>& ds, int i, int j) {
        int s = 0, b = 0;
        for (auto& d : ds) {
            int ni = i + d.first, nj = j + d.second;
            if (ni < 0 || ni >= size(img) || nj < 0 || nj >= size(img[0])) continue;
            s += img[ni][nj];
            b++;
        }
        return s / b;
    }
};
