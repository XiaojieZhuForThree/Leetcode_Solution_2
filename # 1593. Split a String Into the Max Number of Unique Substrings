#include <string>
#include <unordered_set>
using std::string;

class Solution {
public:
    int ans = 0;
    int maxUniqueSplit(string s) {
        std::unordered_set<string> p;
        dfs(s, p, 0);
        return ans;
    }
private:
    void dfs(string& s, std::unordered_set<string>& p, int i) {
        if (i == size(s)) {
            int k = size(p);
            ans = std::max(ans, k);
            return;
        }
        for (int j = 1; i + j <= size(s); j++) {
            string cand = s.substr(i, j);
            if (p.count(cand)) continue;
            p.insert(cand);
            dfs(s, p, i + j);
            p.erase(cand);
        }
        return;
    }
};
