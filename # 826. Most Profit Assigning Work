#include <vector>
#include <algorithm>
using std::vector;

class Solution {
public:
	int maxProfitAssignment(vector<int>& difficulty, vector<int>& profit, vector<int>& worker) {
		vector<int> v;
		for (int i = 0; i < size(difficulty); i++) {
			v.push_back(i);
		}
		sort(v.begin(), v.end(), [&difficulty](int a, int b) {
			return difficulty[a] < difficulty[b];
			});
		sort(worker.begin(), worker.end());
		int ptr = 0, cur = 0, ans = 0;
		for (int i : worker) {
			while (ptr < size(difficulty) && difficulty[v[ptr]] <= i) {
				cur = std::max(cur, profit[v[ptr++]]);
			}
			ans += cur;
		}
		return ans;
	}
};
