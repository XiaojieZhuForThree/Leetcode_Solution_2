#include <vector>
#include <string>
using std::vector;
using std::string;

class Solution {
public:
    vector<int> diffWaysToCompute(string expression) {
        if (expression.empty()) return {};
        if (isNumber(expression)) return { stoi(expression) };
        vector<int> ans;
        for (int i = 0; i < size(expression); i++) {
            if (!isdigit(expression[i])) {
                for (int m : diffWaysToCompute(expression.substr(0, i))) {
                    for (int n : diffWaysToCompute(expression.substr(i + 1, size(expression) - i - 1))) {
                        ans.push_back(op(m, n, expression[i]));
                    }
                }
            }
        }
        return ans;
    }

private:
    bool isNumber(string& s) {
        for (char c : s) {
            if (!isdigit(c)) return false;
        }
        return true;
    }

    int op(int a, int b, char op) {
        if (op == '+') return a + b;
        if (op == '-') return a - b;
        return a * b;
    }
};
