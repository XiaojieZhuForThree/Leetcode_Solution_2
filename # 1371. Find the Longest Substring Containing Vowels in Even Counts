#include <string>
#include <unordered_map>
using std::string;

class Solution {
public:
    int findTheLongestSubstring(string s) {
        std::unordered_map<char, int> m{ {'a', 0}, {'e', 1}, {'i', 2}, {'o', 3}, {'u', 4} };
        std::unordered_map<int, int> seen;
        seen[0] = -1;
        int ans = 0, cur = 0;
        for (int i = 0; i < size(s); i++) {
            if (m.count(s[i])) cur ^= (1 << m[s[i]]);
            if (seen.count(cur)) ans = std::max(ans, i - seen[cur]);
            else seen[cur] = i;
        }
        return ans;
    }
};
