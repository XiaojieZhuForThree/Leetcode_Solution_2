#include <vector>
#include <algorithm>
#include <unordered_map>
using std::vector;

class Solution {
public:
    int longestSquareStreak(vector<int>& nums) {
        std::sort(nums.begin(), nums.end());
        std::unordered_map<long long, int> m;
        int ans = -1;
        for (int i = size(nums) - 1; i >= 0; i--) {
            int cur = nums[i];
            long long c = (long long)cur;
            if (m.count(c * c)) m[c] = m[c * c] + 1;
            else m[c] = 1;
            if (m[c] >= 2) ans = std::max(ans, m[c]);
        }
        return ans;
    }
};
