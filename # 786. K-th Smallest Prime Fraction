#include <vector>
#include <queue>

using std::vector;

class Solution {
public:
    vector<int> kthSmallestPrimeFraction(vector<int>& arr, int k) {
        auto comp = [&arr](std::pair<int, int>& a, std::pair<int, int>& b) {
            return arr[a.first] * arr[b.second] > arr[a.second] * arr[b.first];
            };
        std::priority_queue<std::pair<int, int>, vector<std::pair<int, int>>, decltype(comp)> pq(comp);
        for (int i = 0; i < size(arr) - 1; i++) {
            for (int j = i + 1; j < size(arr); j++) pq.push({ i, j });
        }
        for (int i = 0; i < k; i++) {
            auto cur = pq.top();
            if (i == k - 1) return { arr[cur.first], arr[cur.second] };
            pq.pop();
        }
        return {};
    }
};
