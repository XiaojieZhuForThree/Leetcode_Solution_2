#include <vector>
using std::vector;

class Solution {
public:
    int countUnguarded(int m, int n, vector<vector<int>>& guards, vector<vector<int>>& walls) {
        vector<vector<int>> v(m, vector<int>(n, 0));
        for (auto& g : guards) v[g[0]][g[1]] = 1;
        for (auto& w : walls) v[w[0]][w[1]] = 2;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (v[i][j] == 1) {
                    for (int l = j - 1; l >= 0; l--) {
                        if (v[i][l] == 1 || v[i][l] == 2) break;
                        v[i][l] = 3;
                    }
                    for (int l = j + 1; l < n; l++) {
                        if (v[i][l] == 1 || v[i][l] == 2) break;
                        v[i][l] = 3;
                    }
                    for (int k = i - 1; k >= 0; k--) {
                        if (v[k][j] == 1 || v[k][j] == 2) break;
                        v[k][j] = 3;
                    }
                    for (int k = i + 1; k < m; k++) {
                        if (v[k][j] == 1 || v[k][j] == 2) break;
                        v[k][j] = 3;
                    }
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (v[i][j] == 0) ans++;
            }
        }
        return ans;
    }
};
