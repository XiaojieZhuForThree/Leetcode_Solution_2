#include <deque>
#include <vector>
class CustomStack {
public:
    std::deque<int> q;
    int m;
    CustomStack(int maxSize) {
        m = maxSize;
    }

    void push(int x) {
        if (size(q) == m) return;
        q.push_back(x);
    }

    int pop() {
        if (q.empty()) return -1;
        int cur = q.back();
        q.pop_back();
        return cur;
    }

    void increment(int k, int val) {

        std::vector<int> v;
        for (int i = 0; i < k; i++) {
            if (q.empty()) break;
            int cur = q.front();
            q.pop_front();
            v.push_back(cur + val);
        }
        reverse(v.begin(), v.end());
        for (int i : v) q.push_front(i);
    }
};

/**
 * Your CustomStack object will be instantiated and called as such:
 * CustomStack* obj = new CustomStack(maxSize);
 * obj->push(x);
 * int param_2 = obj->pop();
 * obj->increment(k,val);
 */
